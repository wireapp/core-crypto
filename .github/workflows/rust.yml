name: Rust compile & test

on: [push]

jobs:
  fmt:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  check:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: check
      - name: "Check benches"
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --benches

  build:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: taiki-e/install-action@nextest
      - name: "Test CoreCrypto"
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --verbose --release
      - name: "Test CoreCrypto documentation"
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc

  proteus-test:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: taiki-e/install-action@nextest
      - name: "Test CoreCrypto's proteus implementation"
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --verbose --features proteus,cryptobox-migrate,proteus-keystore proteus

  # extract things unrelated to main tests not to slow them down
  tooling-test:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: taiki-e/install-action@nextest
      - name: "Test CoreCrypto xtask tooling"
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: run --verbose --manifest-path xtask/Cargo.toml
      - name: "Test CoreCrypto benchmarks"
        run: sh crypto/benches/scripts/test.sh

  wasm-build:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    strategy:
      matrix:
        workspace: [ "crypto", "keystore", "mls-provider" ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - uses: Swatinem/rust-cache@v1
      - name: WASM build
        run: wasm-pack build --dev --target web ${{ matrix.workspace }}


  wasm-test:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    strategy:
      matrix:
        workspace: ["crypto", "keystore", "mls-provider"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - uses: Swatinem/rust-cache@v1
      - name: Run tests (wasm)
        run: wasm-pack test --release --headless --chrome ${{ matrix.workspace }}

  proteus-wasm-test:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - uses: Swatinem/rust-cache@v1
      - name: Run tests (wasm)
        run: |
          wasm-pack test --chrome --headless keystore --features proteus-keystore -- proteus
          wasm-pack test --chrome --headless crypto --features proteus,cryptobox-migrate -- proteus

  e2e-interop-test:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
      - name: Setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - uses: Swatinem/rust-cache@v1
      - name: Run E2E interop test
        run: cargo run --bin interop
