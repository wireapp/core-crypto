concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-interop"
  cancel-in-progress: true

on:
  workflow_call:

env:
  RELEASE: 1

jobs:
  e2e-interop-test:
    if: github.event_name == 'pull_request'
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v5
      - name: Setup rust macOS
        uses: ./.github/actions/setup-and-cache-rust
        with:
          rustflags: ''
          cache-key-prefix: e2e-interop-test
      - name: setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4.0'
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install chrome-headless-shell
        run: |
          bun x @puppeteer/browsers install chrome-headless-shell@latest --path $PWD
          echo "CHROME_PATH=$(echo $PWD/chrome-headless-shell/*/*/chrome-headless-shell)" >> $GITHUB_ENV
      - name: Install chromedriver
        run: |
          bun x @puppeteer/browsers install chromedriver@latest --path $PWD
          echo "CHROMEDRIVER_PATH=$(echo $PWD/chromedriver/*/*/chromedriver)" >> $GITHUB_ENV
      - name: download web bindings
        uses: ./.github/actions/make/web/ts
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
      - name: download artifacts for ios device
        uses: ./.github/actions/make/ios
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          task: ios-device

      - name: download artifacts for ios simulator
        uses: ./.github/actions/make/ios
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          task: ios-simulator-arm

      - name: download swift bindings
        uses: ./.github/actions/make/bindings-swift
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}

      - name: create simulator
        run: |
          echo "SIMULATOR=$(./scripts/create-ios-sim-device.sh "iPhone 16 e2e-interop-test")" >> $GITHUB_ENV
      - name: build & install iOS Interop client
        run: |
          cd interop/src/clients/InteropClient
          xcodebuild -scheme InteropClient -sdk iphonesimulator -configuration Release \
                     -destination 'platform=iOS Simulator,name=iPhone 16 e2e-interop-test' clean build install DSTROOT=./Products
          ./install-interop-client.sh ${{ env.SIMULATOR }}
      - name: run e2e interop test
        env:
          RUST_LOG: interop=info
        run: cargo run --bin interop
        # we separate shutdown from deletion to make sure the device is always removed, even when shutdown failed
      - name: delete simulator
        if: always()
        run: |
          ./scripts/delete-ios-sim-device.sh ${{ env.SIMULATOR }}
