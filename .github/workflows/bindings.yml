name: Check bindings

on: [push]

jobs:
  check-android:
    if: github.repository == 'wireapp/core-crypto'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Gradle Setup
        uses: gradle/gradle-build-action@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: "Setup rust"
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "armv7-linux-androideabi,aarch64-linux-android,x86_64-linux-android,i686-linux-android"
      - name: Setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - uses: Swatinem/rust-cache@v2
      - name: Build Android package
        run: |
          cd crypto-ffi
          cargo make copy-android-resources
      - name: Build package
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: kotlin
          arguments: android:build -x lint -x lintRelease

  check-swift:
    runs-on: macos-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim"
      - name: Setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - uses: Swatinem/rust-cache@v1
      - run: |
          cd crypto-ffi
          cargo make create-swift-package
          cd bindings/swift
          swift build

  check-wasm:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - uses: Swatinem/rust-cache@v2
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: "latest"
      - name: Build WASM package
        run: |
          cd crypto-ffi
          cargo make wasm-build
      - name: Build TS bindings
        run: |
          npm install
          npm run build
