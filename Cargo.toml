[workspace]
members = [
  "crypto",
  "crypto-ffi",
  "crypto-macros",
  "keystore",
  "keystore-dump",
  "mls-provider",
  "interop",
  "decode",
  "obfuscate",
]
resolver = "2"

[workspace.lints.clippy]
missing_safety_doc = "deny"
undocumented_unsafe_blocks = "deny"

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(wasm_bindgen_unstable_test_coverage)',
] }

[workspace.dependencies]
async-channel = "2.5.0"
async-lock = "3.4"
async-recursion = "1"
async-trait = "0.1"
base64 = "0.22"
bitflags = "2.9"
cfg-if = "1.0"
console_error_panic_hook = "0.1.7"
const_format = "0.2"
core-crypto = { path = "crypto" }
core-crypto-keystore = { path = "keystore" }
core-crypto-macros = { path = "crypto-macros" }
derive_more = { version = "2.0", features = [
  "from",
  "into",
  "try_from",
  "constructor",
  "display",
  "debug",
  "as_ref",
  "deref",
  "deref_mut",
] }
futures-util = "0.3"
hex = "0.4"
idb = "0.6"
indexmap = "2"
itertools = "0.14"
log = { version = "0.4", features = ["kv_serde"] }
log-reload = "0.1.3"
macro_rules_attribute = "0.2"
mls-crypto-provider = { path = "mls-provider" }
obfuscate = { path = "obfuscate" }
pem = "3.0"
rand = { version = "0.8", features = ["getrandom"] }
rmp-serde = "1.3.0"
schnellru = "0.2"
serde = "1.0"
serde_json = "1.0"
sha1 = "0.10"
sha2 = "0.10"
smol = "2.0"
smol-macros = "0.1"
strum = { version = "0.27", features = ["derive"] }
thiserror = "2.0"
tls_codec = "0.4.2"
typed-builder = "0.22.0"
uniffi = "0.30"
url = "2.5"
uuid = "1.18"
x509-cert = "0.2"
zeroize = "1.8"

# our OpenMLS fork
openmls = { git = "https://github.com/wireapp/openmls", rev = "c9cde17076508968c9cbead5728454f0a1f60c4f", version = "1" }
openmls_basic_credential = { git = "https://github.com/wireapp/openmls", rev = "c9cde17076508968c9cbead5728454f0a1f60c4f", version = "0.2" }
openmls_traits = { git = "https://github.com/wireapp/openmls", rev = "c9cde17076508968c9cbead5728454f0a1f60c4f", version = "0.2" }
openmls_x509_credential = { git = "https://github.com/wireapp/openmls", rev = "c9cde17076508968c9cbead5728454f0a1f60c4f", version = "0.2" }

# proteus
proteus-traits = { git = "https://github.com/wireapp/proteus", tag = "v2.1.1" }
proteus-wasm = { git = "https://github.com/wireapp/proteus", tag = "v2.1.1" }

wire-e2e-identity = { git = "https://github.com/wireapp/rusty-jwt-tools", tag = "v0.13.0" }

[profile.release]
codegen-units = 1
lto = true
opt-level = "s"
# ! Important: Do NOT enable stripping.
# ! This will cause the FFI to stop working because UniFFI stores the Rust <-> cdylib mapping
# ! in the `.strtab` section of the executable. Stripping this causes everything to stop functioning.
strip = false
# panic = "abort"

[profile.dev.package.backtrace]
opt-level = 3
