name: Publish Android packages

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    tags:
      - "**"

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-D warnings -W unreachable-pub"
  RUSTUP_MAX_RETRIES: 10
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  publish-android:
    if: github.repository == 'wireapp/core-crypto'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Gradle Setup
        uses: gradle/gradle-build-action@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: "Setup rust"
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "armv7-linux-androideabi,aarch64-linux-android,x86_64-linux-android,i686-linux-android"
      - name: Setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Install NDK 25
        run: echo "y" | sdkmanager --install "ndk;25.2.9519653"
      - name: Build Android package
        env:
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
        run: |
          cd crypto-ffi
          cargo make android
      - name: Publish package
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: kotlin
          arguments: "android:publishAllPublicationsToMavenCentral --no-configuration-cache"
        env:
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.PGP_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.PGP_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.PGP_PASSPHRASE }}
