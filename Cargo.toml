[workspace]
members = [
    "crypto",
    "crypto-ffi",
    "crypto-attributes",
    "keystore",
    "keystore-dump",
    "mls-provider",
    "interop"
]
exclude = [
    "xtask",
    "extras/wasm-browser-run",
    "extras/wasm-browser-test-runner",
    "extras/keystore-regression-versions"
]
resolver = "2"

[workspace.dependencies]
async-lock = "3.4"
async-recursion = "1"
async-std = "1.12"
async-trait = "0.1"
base64 = "0.22"
bitflags = "2.6"
cfg-if = "1.0"
const_format = "0.2"
core-crypto-keystore = { version = "^1.0.0-rc.60", path = "keystore" }
derive_more = { version = "0.99", features = ["from", "into", "deref", "deref_mut"] }
futures-util = "0.3"
hex = "0.4"
indexmap = "2"
itertools = "0.13"
log = "0.4"
mls-crypto-provider = { version = "^1.0.0-rc.60", path = "mls-provider" }
pem = "3.0"
rand = { version = "0.8", features = ["getrandom"] }
rexie = "0.6.1"
schnellru = "0.2"
serde = "1.0"
serde_json = "1.0"
sha1 = "0.10"
sha2 = "0.10"
strum = { version = "0.26", features = ["derive"] }
thiserror = "1.0"
tls_codec = "0.4.1"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["json"] }
uniffi = "0.28"
url = "2.5"
uuid = "1.10"
x509-cert = "0.2"
zeroize = "1.8"

# our OpenMLS fork
openmls = { git = "https://github.com/wireapp/openmls", rev = "6d2f5a2046fc12aca602af207e650b94848f09ff", version = "1" }
openmls_traits = { git = "https://github.com/wireapp/openmls", rev = "6d2f5a2046fc12aca602af207e650b94848f09ff", version = "0.2" }
openmls_basic_credential = { git = "https://github.com/wireapp/openmls", rev = "6d2f5a2046fc12aca602af207e650b94848f09ff", version = "0.2" }
openmls_x509_credential = { git = "https://github.com/wireapp/openmls", rev = "6d2f5a2046fc12aca602af207e650b94848f09ff", version = "0.2" }

[workspace.dependencies.wire-e2e-identity]
git = "https://github.com/wireapp/rusty-jwt-tools"
version = "0.9"

[patch.'https://github.com/wireapp/proteus'.proteus]
package = "proteus"
# Keep the extra / in the url, it prevents this error:
# `patch for `proteus` in `https://github.com/wireapp/proteus` points to the same source, but patches must point to different sources`
git = "https://github.com/wireapp//proteus"
branch = "otak/fix-1.0.3"

[patch.crates-io.proteus-traits]
package = "proteus-traits"
git = "https://github.com/wireapp/proteus"
branch = "2.x"


# aarch64-apple-ios-sim target support has not yet been released
[patch.crates-io.openssl-src]
git = "https://github.com/alexcrichton/openssl-src-rs.git"
branch = "release/111"
package = "openssl-src"

[patch.crates-io.jwt-simple]
git = "https://github.com/wireapp/rust-jwt-simple"
tag = "v0.13.0-pre.core-crypto-1.0.0"

[profile.release]
lto = true
codegen-units = 1
opt-level = "s"
# ! Important: Do NOT enable stripping.
# ! This will cause the FFI to stop working because UniFFI stores the Rust <-> cdylib mapping
# ! in the `.strtab` section of the executable. Stripping this causes everything to stop functioning.
strip = false
# panic = "abort"

[profile.dev.package.backtrace]
opt-level = 3
