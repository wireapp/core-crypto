name: documentation

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

on:
  push:
    branches:
      - main
    tags:
      - "**"
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to checkout'
        required: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  GIT_TAG: ${{ github.ref_type == 'tag' && github.ref_name || github.event.inputs.tag || '' }}

jobs:
  rustdoc:
    name: rust
    runs-on: ubuntu-latest

    steps:
    - name: checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ env.GIT_TAG || '' }}
    - uses: ./.github/actions/setup-and-cache-rust
      with:
        rustflags: '-D warnings -W unreachable-pub'
    - run: cargo doc --all --no-deps

    - uses: actions/upload-artifact@v4.5.0
      with:
        name: rustdocs
        path: target/doc
        retention-days: 1
        overwrite: true
        include-hidden-files: true


  tsdoc:
    name: typescript
    runs-on: ubuntu-latest

    steps:
    - name: checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ env.GIT_TAG || '' }}

    - uses: ./.github/actions/setup-and-cache-rust
      with:
        rustflags: ''
        target: |
          wasm32-unknown-unknown
          x86_64-unknown-linux-gnu

    - name: setup cargo-make
      uses: davidB/rust-cargo-make@v1

    - name: install wasm-pack
      uses: taiki-e/install-action@v2
      with:
        tool: wasm-pack

    - name: setup bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: make ts docs
      run: |
        cd crypto-ffi
        cargo make docs-ts

    - uses: actions/upload-artifact@v4.5.0
      with:
        name: tsdoc
        path: target/doc
        retention-days: 1
        overwrite: true
        include-hidden-files: true


  ktdoc:
    name: kotlin
    runs-on: ubuntu-latest

    steps:
    - name: checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ env.GIT_TAG || '' }}

    - uses: ./.github/actions/setup-and-cache-rust
      with:
        rustflags: '' # note that this is _not_ the default

    - name: setup cargo-make
      uses: davidB/rust-cargo-make@v1

    - name: make kotlin docs
      run: |
        mkdir -p target/doc/core_crypto_ffi/bindings/kotlin
        cd crypto-ffi
        cargo make docs-kotlin

    - uses: actions/upload-artifact@v4.5.0
      with:
        name: ktdoc
        path: target/doc
        retention-days: 1
        overwrite: true
        include-hidden-files: true

  swiftdoc:
    name: swift
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_TAG || '' }}
      - uses: swift-actions/setup-swift@v2.3.0
        with:
          swift-version: "6.0"
      - name: setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: swift docs
        run: |
          mkdir -p target/doc/core_crypto_ffi/bindings/swift
          cd crypto-ffi
          cargo make docs-swift-catalog
      - uses: actions/upload-artifact@v4.5.0
        with:
          name: swiftdoc
          path: target/doc
          retention-days: 1
          overwrite: true
          include-hidden-files: true

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: github.repository == 'wireapp/core-crypto'
    needs:
      - rustdoc
      - tsdoc
      - ktdoc
      - swiftdoc

    steps:
    - name: checkout repository
      uses: actions/checkout@v4

    - name: Download rustdocs
      uses: actions/download-artifact@v4.1.8
      with:
        pattern: "rustdocs"
        path: "./target/doc/${{ env.GIT_TAG }}"
        merge-multiple: true

    - name: Download TypeScript and Kotlin docs
      uses: actions/download-artifact@v4.1.8
      with:
        pattern: "*doc"
        path: "./target/doc/${{ env.GIT_TAG }}"
        merge-multiple: true

    - name: Copy index.md
      run: |
        cp docs/index.md target/doc/index.md

    - name: deploy docs
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: target/doc
        keep_files: true
        force_orphan: false
        enable_jekyll: true
