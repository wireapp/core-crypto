name: publish swift package

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

on:
  push:
    tags:
      - "**"

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  publish-swift:
    if: github.repository == 'wireapp/core-crypto'
    runs-on: macos-13
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2.0'
      - uses: actions/checkout@v4
      - name: force-fetch the tag to work around actions/checkout#290
        run: git fetch -f origin ${{ github.ref }}:${{ github.ref }}
      - name: ensure the tag is signed
        run: git cat-file tag ${{ github.ref_name }} | grep -q -- '-----BEGIN PGP SIGNATURE-----'
      - name: "setup rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1  # this implicitly caches Rust tools and build artifacts
        with:
          rustflags: ''
          target: "aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim"
      - name: setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: build xcframework
        run: |
          cd crypto-ffi
          cargo make ios-create-xcframework
      - name: upload xcframework
        uses: softprops/action-gh-release@v2
        with:
            files: crypto-ffi/bindings/swift/WireCoreCrypto.xcframework.zip
