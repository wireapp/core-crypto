name: publish jvm packages

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-publish-jvm"

on:
  workflow_call:
    secrets:
      SONATYPE_USERNAME:
        required: true
      SONATYPE_PASSWORD:
        required: true
      PGP_KEY_ID:
        required: true
      PGP_SIGNING_KEY:
        required: true
      PGP_PASSPHRASE:
        required: true

env:
  RELEASE: 1

jobs:
  publish-jvm:
    if: github.repository == 'wireapp/core-crypto'
    name: publish jvm package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: set up jdk 17
        uses: actions/setup-java@v5
        with:
          java-version: "17"
          distribution: "adopt"

      - name: download bindings artifact
        uses: ./.github/actions/make/bindings-kotlin-jvm
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}

      - name: gradle setup
        uses: gradle/actions/setup-gradle@v5

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v5

      - name: download jvm bindings
        uses: ./.github/actions/make/bindings-kotlin-jvm
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}

      - name: download x86_64 linux artifact
        uses: ./.github/actions/make/jvm
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}

      # The specific jvm action uses `uname -s` to determine which `jvm` make rule to call.
      # Because this workflow runs on ubuntu, we're using the generic action
      - name: download aarch64 apple darwin artifact
        uses: ./.github/actions/make
        with:
          key: jvm-darwin
          make-rule: jvm-darwin
          target-path: target/aarch64-apple-darwin/release/libcore_crypto_ffi.dylib
          gh-token: ${{ secrets.GITHUB_TOKEN }}

      - name: zip package
        run: |
          zip -r jvm.zip \
          crypto-ffi/bindings/jvm/src/main/uniffi/com/wire/crypto/core_crypto_ffi.kt \
          target/aarch64-apple-darwin/release/libcore_crypto_ffi.dylib \
          target/x86_64-unknown-linux-gnu/release/libcore_crypto_ffi.so

      - name: upload package
        uses: softprops/action-gh-release@v2
        with:
            files: jvm.zip
            fail_on_unmatched_files: true

      # For JVM, we're not deleting the release artifacts after this step succeds,
      # because publishing may still fail later.
      - name: publish package
        run: |
          cd crypto-ffi/bindings
          ./gradlew :jvm:publishAllPublicationsToMavenCentralRepository --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.PGP_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.PGP_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.PGP_PASSPHRASE }}
