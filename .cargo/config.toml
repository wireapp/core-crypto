[env]
# Android build flags
# ? RANLIB flags are now needed because this https://github.com/alexcrichton/openssl-src-rs/pull/180 breaks everything
CC_armv7-linux-androideabi = "armv7a-linux-androideabi24-clang"
CXX_armv7-linux-androideabi = "armv7a-linux-androideabi24-clang++"
AR_armv7-linux-androideabi = "llvm-ar"
RANLIB_armv7-linux-androideabi = "llvm-ranlib"
CC_aarch64-linux-android = "aarch64-linux-android24-clang"
CXX_aarch64-linux-android = "aarch64-linux-android24-clang++"
AR_aarch64-linux-android = "llvm-ar"
RANLIB_aarch64-linux-android = "llvm-ranlib"
CC_x86_64-linux-android = "x86_64-linux-android24-clang"
CXX_x86_64-linux-android = "x86_64-linux-android24-clang++"
AR_x86_64-linux-android = "llvm-ar"
RANLIB_x86_64-linux-android = "llvm-ranlib"
# ? Ring treats warnings as errors during local development by detecting
# ? the presence of a `.git` folder
# ? With us having a git dependency to ring, this triggers this local development behavior, preventing
# ? release builds on certain platforms. Gotta love build systems that are "UB as a service"
# TODO: Remove this once we target a crates.io version of ring. Probably never! Tracking issue: WPB-9580
CFLAGS = "-Wno-error=inline"

# Android linkage
[target.armv7-linux-androideabi]
ar = "llvm-ar"
linker = "armv7a-linux-androideabi24-clang"
rustflags = [
    "-C", "target_feature=+neon",
    "-C", "link-args=-latomic"
]

[target.aarch64-linux-android]
ar = "llvm-ar"
linker = "aarch64-linux-android24-clang"
rustflags = [
    "-C", "link-args=-latomic"
]

[target.x86_64-linux-android]
ar = "llvm-ar"
linker = "x86_64-linux-android24-clang"
rustflags = [
    "-C", "link-args=-latomic"
]
