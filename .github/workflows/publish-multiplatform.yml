name: Publish Kotlin multiplatform packages

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    tags:
      - "**"

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-D warnings -W unreachable-pub"
  RUSTUP_MAX_RETRIES: 10
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse


jobs:
  build-linux-artifacts:
    if: github.repository == 'wireapp/core-crypto'
    name: Build Linux & Android Artifacts
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: "Setup rust"
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "x86_64-unknown-linux-gnu"
      - name: Setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Build Artifacts
        run: |
          cd crypto-ffi
          cargo make jvm
          cargo make android
      # Linux
      - name: Upload x86_64-unknown-linux-gnu artifacts
        uses: actions/upload-artifact@v3
        with:
            name: x86_64-unknown-linux-gnu
            path: target/x86_64-unknown-linux-gnu/release/*.so

      # Android
      - name: Upload aarch64-linux-android artifacts
        uses: actions/upload-artifact@v3
        with:
            name: aarch64-linux-android
            path: target/aarch64-linux-android/release/*.so
      - name: Upload armv7-linux-androideabi artifacts
        uses: actions/upload-artifact@v3
        with:
            name: armv7-linux-androideabi
            path: target/armv7-linux-androideabi/release/*.so
      - name: Upload i686-linux-android artifacts
        uses: actions/upload-artifact@v3
        with:
            name: i686-linux-android
            path: target/i686-linux-android/release/*.so
      - name: Upload x86_64-linux-android artifacts
        uses: actions/upload-artifact@v3
        with:
            name: x86_64-linux-android
            path: target/x86_64-linux-android/release/*.so

  build-darwin-artifacts:
    if: github.repository == 'wireapp/core-crypto'
    name: Build Darwin & iOS Artifacts
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "x86_64-apple-darwin,aarch64-apple-darwin"
      - name: Setup cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Build Artifacts
        run: |
          cd crypto-ffi
          cargo make jvm
          cargo make ios

      # Darwin
      - name: Upload x86_64-apple-darwin artifacts
        uses: actions/upload-artifact@v3
        with:
            name: x86_64-apple-darwin
            path: |
                target/x86_64-apple-darwin/release/*.dylib
                target/x86_64-apple-darwin/release/*.a
      - name: Upload aarch64-apple-darwin artifacts
        uses: actions/upload-artifact@v3
        with:
            name: aarch64-apple-darwin
            path: |
                target/aarch64-apple-darwin/release/*.dylib
                target/aarch64-apple-darwin/release/*.a

      # iOS
      - name: Upload aarch64-apple-ios artifacts
        uses: actions/upload-artifact@v3
        with:
            name: aarch64-apple-ios
            path: target/aarch64-apple-ios/release/*.a
      - name: Upload x86_64-apple-ios artifacts
        uses: actions/upload-artifact@v3
        with:
            name: aarch64-apple-ios-sim
            path: target/c/release/*.a
      - name: Upload x86_64-apple-ios artifacts
        uses: actions/upload-artifact@v3
        with:
            name: x86_64-apple-ios
            path: target/x86_64-apple-ios/release/*.a

  publish-jvm:
    if: github.repository == 'wireapp/core-crypto'
    name: Publish JVM Package
    needs: [build-linux-artifacts, build-darwin-artifacts]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Gradle Setup
        uses: gradle/gradle-build-action@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      # Linux
      - name: Download x86_64 Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: target/x86_64-unknown-linux-gnu/release

      # Android
      - name: Download arm64-v8a Android Artifact
        uses: actions/download-artifact@v3
        with:
          name: aarch64-linux-android
          path: target/aarch64-linux-android/release
      - name: Download armeabi-v7a Android Artifact
        uses: actions/download-artifact@v3
        with:
          name: armv7-linux-androideabi
          path: target/armv7-linux-androideabi/release
      - name: Download x86 Android Artifact
        uses: actions/download-artifact@v3
        with:
          name: i686-linux-android
          path: target/i686-linux-android/release
      - name: Download x86_64 Android Artifact
        uses: actions/download-artifact@v3
        with:
          name: x86_64-linux-android
          path: target/x86_64-linux-android/release

      # Darwin
      - name: Download x86_64 Apple Darwin Artifact
        uses: actions/download-artifact@v3
        with:
          name: x86_64-apple-darwin
          path: target/x86_64-apple-darwin/release
      - name: Download Aarch64 Apple Darwin Artifact
        uses: actions/download-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: target/aarch64-apple-darwin/release

      # iOS
      - name: Download Arm64 iOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: aarch64-apple-ios
          path: target/aarch64-apple-ios/release
      - name: Download Simulator Arm64 iOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: aarch64-apple-ios-sim
          path: target/aarch64-apple-ios-sim/release
      - name: Download Simulator x86 iOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: x86_64-apple-ios
          path: target/x86_64-apple-ios/release

      - name: Publish package
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: kotlin-multiplatform
          arguments: "jvm:publishMavenPublicationToGithubRepository"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
