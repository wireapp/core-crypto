[workspace]
members = [
    "crypto",
    "crypto-ffi",
    "crypto-attributes",
    "keystore",
    "mls-provider",
    "interop"
]
exclude = [
    "xtask",
    "extras/anycrypto",
    "extras/core-ds",
    "extras/wasm-browser-run",
    "extras/wasm-browser-test-runner"
]
resolver = "2"

[workspace.dependencies]
tls_codec = "0.3.0"

[patch.crates-io.schnellru]
git = "https://github.com/wireapp/schnellru"
branch = "feat/try-insert"

[patch.crates-io.rexie]
git = "https://github.com/wireapp/rexie"
branch = "feat/api-expansion"

[patch.'https://github.com/wireapp/proteus'.proteus]
package = "proteus"
# Keep the extra / in the url, it prevents this error:
# `patch for `proteus` in `https://github.com/wireapp/proteus` points to the same source, but patches must point to different sources`
git = "https://github.com/wireapp//proteus"
branch = "otak/fix-1.0.3"

[patch.crates-io.proteus-traits]
package = "proteus-traits"
git = "https://github.com/wireapp/proteus"
branch = "2.x"

[patch.crates-io.openmls]
package = "openmls"
git = "https://github.com/wireapp/openmls"
#tag = "v1.0.0-pre.core-crypto-1.0.0"
 branch = "feat/rfc9420"

[patch.crates-io.openmls_traits]
package = "openmls_traits"
git = "https://github.com/wireapp/openmls"
#tag = "v1.0.0-pre.core-crypto-1.0.0"
 branch = "feat/rfc9420"

[patch.crates-io.openmls_basic_credential]
package = "openmls_basic_credential"
git = "https://github.com/wireapp/openmls"
#tag = "v1.0.0-pre.core-crypto-1.0.0"
 branch = "feat/rfc9420"

[patch.crates-io.openmls_x509_credential]
package = "openmls_x509_credential"
git = "https://github.com/wireapp/openmls"
#tag = "v1.0.0-pre.core-crypto-1.0.0"
 branch = "feat/rfc9420"

[patch.crates-io.hpke]
git = "https://github.com/wireapp/rust-hpke.git"
branch = "wire/unstable-pq-xyber"

[patch.crates-io.wire-e2e-identity]
git = "https://github.com/wireapp/rusty-jwt-tools"
package = "wire-e2e-identity"
tag = "v0.4.5"

# aarch64-apple-ios-sim target support has not yet been released
[patch.crates-io.openssl-src]
git = "https://github.com/alexcrichton/openssl-src-rs.git"
branch = "release/111"
package = "openssl-src"

[patch.crates-io.jwt-simple]
git = "https://github.com/wireapp/rust-jwt-simple"
tag = "v0.11.4-pre.core-crypto-0.7.0"

[profile.release]
lto = true
codegen-units = 1
opt-level = "s"
# ! Important: Do NOT enable stripping.
# ! This will cause the FFI to stop working because UniFFI stores the Rust <-> cdylib mapping
# ! in the `.strtab` section of the executable. Stripping this causes everything to stop functioning.
strip = false
# panic = "abort"

[profile.dev.package.backtrace]
opt-level = 3
