rd_("AjContains the success value00000000CmRetrieves the client\xe2\x80\x99s client id. This is free-form and \xe2\x80\xa6lMLS Group IdAeGroup/conversation idBePrekey id (automatically incremented)BeIdentifier of the joined conversationCiRequests that a client with a specified KeyPackage be \xe2\x80\xa6CiUtility for decoding various wire formats for mls and \xe2\x80\xa6AhContains the error value00000000B`An external MLS operation failedBdReturns the AAD used in the framing.BjGet a flags value with all known bits set.CnCore Crypto will call this method whenever it needs to log \xe2\x80\xa6oMLS AbstractionCiConstruct a crypto provider with defaults and a given \xe2\x80\xa6CkCreates a new group with the creator as the only member \xe2\x80\xa6DbCreates a <code>ConversationId</code> Ref, needed to implement \xe2\x80\xa6DcInstantiate a new <code>TransactionHelper</code> from its function.BjInstantiate a client id from a byte array.ChConstruct a new instance, transferring data from the \xe2\x80\xa6nInstantiate CCBlConstruct a new instance from a byte vector.DhCreate a new <code>Self</code> from conversation id and the commit data.8DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6AlCBOR serialization of prekeyGkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6CiURL to call for the acme server to complete the challengeAeURL of this challengeB`Plain old and complete GroupInfoAiCommon errors we generateAhBuild an end certificateBiContainer enum for leaf and parent nodes.AkBuild a root CA certificateCnA x509 certificate generally obtained through e2e identity \xe2\x80\xa6A`X509 certificate1AnGet the underlying bits value.CjOpaque secret data sufficient to reconstruct a history \xe2\x80\xa6AoReturns the argument unchanged.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CkInitializes the client. If the client\xe2\x80\x99s cryptographic \xe2\x80\xa6BaCalls <code>U::from(self)</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BfYield a set of contained flags values.BeLoads the state from persisted state.AjOpen or create a Database.AcPersists the state.CeAllows to extract the MLS Client from the wrapper \xe2\x80\xa6AhDestroys a group locallyAnDefault implementation of wipeCmThe message was rejected by the delivery service and there\xe2\x80\xa60AoBasic credential i.e. a KeyPairmBasic keypair1oNot implementedDiImplements the <code>Debug</code> trait for the given struct changing \xe2\x80\xa6ClContains GroupInfo changes since previous epoch (not yet \xe2\x80\xa6BhErrors produced by the root module groupBdErrors produced during a transactionCnA client should have consumed all incoming messages before \xe2\x80\xa60BhBuild an intermediate sub CA certificatekAll is fine0CgAborts the transaction, meaning it discards all the \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.AoReturns the internal byte arrayCkWait for any keystore transaction to finish, then close \xe2\x80\xa6CnWait for any running transaction to finish, then close the \xe2\x80\xa6CmWaits for running transactions to finish, then closes the \xe2\x80\xa6121CiDelay time in seconds to feed caller timer for committingBasee MlsConversationDecryptMessageCeWhether this CRL modifies the old CRL (i.e. has a \xe2\x80\xa60BfGet a flags value with all bits unset.AbReturns the epoch.BiReturns the epoch of a given conversationCkWe only expose byte arrays through the FFI so we do all \xe2\x80\xa6;DhImplements the <code>Entity</code> trait for the given struct. To be \xe2\x80\xa6BaOpt-out of the default extensionsChRequests that the member with LeafNodeRef removed be \xe2\x80\xa6CkA module-specific Result type with a default error variant.0CiSimilar mechanism to Add with the distinction that it \xe2\x80\xa6CjUnique identifier of a User (human person holding some \xe2\x80\xa6BnReturns the group epoch as a <code>u64</code>.DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6AbThe commit message0B`Creates a new group/conversationBeImplementation specific configuration0ClDelete this key package and its private key from the key \xe2\x80\xa6CjDNS domain for which this identity proof was generated \xe2\x80\xa60D`The bitwise or (<code>|</code>) of the bits in each flags value.CnCommits the transaction, meaning it takes all the enqueued \xe2\x80\xa6ClExtract the unique ClientId from an identifier. Use with \xe2\x80\xa6Bguser handle e.g. <code>john_wire</code>0D`The bitwise or (<code>|</code>) of the bits in two flags values.CcWhether all known bits in this flags value are set.Cjissuer   Name, represents the name signing the certificate0Cnissuer   Name, represents the name signing the certificate \xe2\x80\xa6DhReturns the <code>Credential</code> of a member corresponding to the \xe2\x80\xa6CeWhy was the message rejected by the delivery service?C`Why did the delivery service reject the message?AmWhy was this message rejectedChReInits the group. If there are any proposals in the \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6CmReseeds the internal CSPRNG entropy pool with a brand new \xe2\x80\xa6Cbsee mls_crypto_provider::MlsCryptoProvider::reseed1mWhat happened0AoWhat happened with the keystoreCmStatus of the Credential at the moment T when this object \xe2\x80\xa6CiStatus of the Credential at the moment this object is \xe2\x80\xa6CmNon-standard, Wire specific claim. Indicates the consumer \xe2\x80\xa60DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6BiThe Credential\xe2\x80\x99s certificate is expired0AjA Proteus operation failedBiThe Credential\xe2\x80\x99s certificate is revokedCnThe Credential\xe2\x80\x99s certificate is revoked (not implemented \xe2\x80\xa6CnA MLS Session enables a user device to communicate via the \xe2\x80\xa6C`The message was accepted by the delivery serviceCdThe message was accepted by the distribution serviceAfDecrypted text messageBasee MlsConversationDecryptMessageDdCreate a builder for building <code>SessionConfig</code>. On the \xe2\x80\xa6CaReturns a builder for <code>MlsGroupConfig</code>AmCreate a key package builder.B`What was happening in the caller00BkDecrypts a message for this Proteus sessionCmWill drop current MLS group in memory and replace it with \xe2\x80\xa6CmUtility for clients to get the current state of E2EI when \xe2\x80\xa6BkEncrypts a message for this Proteus sessionCaWill be called inside a transaction in CoreCryptoCmExtract the content of an <code>MlsMessageIn</code> after \xe2\x80\xa6DkConvert a <code>core_crypto_keystore::DatabaseKey</code> into the local \xe2\x80\xa6AjHash of current git commit0BdACME challenge + ACME key thumbprint0CdReturns a list of <code>Member</code>s in the group.CkReturns all members credentials from the group/conversationBnDisplay all members if group info is provided.AcDecrypted plaintext0DjFile containing a base64 encoded proteus message, or <code>-</code> to \xe2\x80\xa6DkFile containing a base64 encoded mls message, or <code>-</code> to read \xe2\x80\xa6mThe GroupInfonThe group infoAcGenerate a proposalAcProteus AbstractionCnThis module contains all super::TransactionContext methods \xe2\x80\xa6BaSets the AAD used in the framing.AfCreates a new Session.AnInitializes the ProteusCentralCiBuilds an instance holding private key material. This \xe2\x80\xa6BhThe version of <code>core-crypto</code>.CdA welcome message if there are pending Add proposalsCnThis module contains transactional conversation operations \xe2\x80\xa61AcA Client identifier0BnThe database acting as a core crypto keystore.C`This connection is transient and lives in memory0AlA key store operation failedlA leaf node.CnA MLS operation failed, but we captured some context about \xe2\x80\xa6BaMLS produces these kinds of errorDjA <code>MlsGroup</code> represents an MLS group with a high-level API. \xe2\x80\xa6BiAll clients have a valid E2EI certificate0CmWhether all set bits in a source flags value are also set \xe2\x80\xa6ChDatabase to be used to instantiate the MlsCryptoProviderAeOpaque raw json value0ClContains raw JSON data of this challenge. This is parsed \xe2\x80\xa61C`Get the data that has previously been set by \xe2\x80\xa6gSee \xe2\x80\xa6AeReturns the group ID.CgGet (unverified) group ID of the verifiable group info.DoCompute the <code>KeyPackageRef</code> of this <code>KeyPackage</code>. The \xe2\x80\xa6BkReturns the identity of a given credential.ClIdentity claims present in the sender credential Present \xe2\x80\xa6Basee MlsConversationDecryptMessageAhProteus identity keypairC`Identity claims present in the sender credential0BoWhether all bits in this flags value are unset.CcClone keystore (its an <code>Arc</code> internnaly)0CoReturns the <code>MlsGroupConfig</code> lifetime configuration.C`Initializes the MLS client of super::CoreCrypto.<DhCreates and returns a new X509 <code>Credential</code> for the given \xe2\x80\xa6CeReturns a reference to the own <code>LeafNode</code>.AdThe proposal messageBiSet arbitrary data to be retrieved by \xe2\x80\xa6gSee \xe2\x80\xa6ClSerializes both wrapped objects into TLS and return them \xe2\x80\xa6CfValidate this configuration to produce a validated \xe2\x80\xa6BfVerify that this key package is valid:CnThese errors can be raised from several different modules, \xe2\x80\xa6BfHandshake messages are never encryptedAeUnencrypted GroupInfo01BaA crate-internal operation failednACME ChallengeAiAssociated ACME ChallengeBjClient id of the associated history clientBaUnique client identifier e.g. \xe2\x80\xa6BoIdentifier for the client to be used by Sessionosee Session::id32ClNeologism to mean the opposite of idempotent. Methods of \xe2\x80\xa6AjConvert from a bits value.D`The bitwise or (<code>|</code>) of the bits in each flags value.ClGet a flags value with the bits of a flag with the given \xe2\x80\xa6Dj<code>true</code> when the source code differed from the commit at the \xe2\x80\xa60CmCreate an in-memory Database whose data will be lost when \xe2\x80\xa6CkReturns whether the own client is still a member of the \xe2\x80\xa6CiIs the conversation still active after receiving this \xe2\x80\xa6Basee MlsConversationDecryptMessageClFalse if processing this message caused the client to be \xe2\x80\xa60BhGet the <code>LeafNode</code> reference.ClThe query results that are obtained during a transaction \xe2\x80\xa6DiCreates and returns a new basic <code>Credential</code> for the given \xe2\x80\xa6BdFor fetching a new nonce used in \xe2\x80\xa6CnURL for fetching a new nonce. Use this only for creating a \xe2\x80\xa6CiURL to call with crate::E2eiEnrollment::new_order_requestAmURL for creating a new order.BlX509 certificate not after as Unix timestampAjX509 certificate not afterAbOptimization level0ClOnly when decrypted message is a commit, CoreCrypto will \xe2\x80\xa6<cMehoBuild Timestamp0BgHandshake messages are always encrypted0CjWrapper superstruct for both mls::session::Session and \xe2\x80\xa6kCredential.DkGroup epoch. Internally this is stored as a <code>u64</code>. The group \xe2\x80\xa6AgThe key package struct.BaDecode and display an MLS messageCkAll clients are still Basic. If all client have expired \xe2\x80\xa60CmWe often want logging for some values that we shouldn\xe2\x80\x99t \xe2\x80\xa6nA parent node.CbThis connection is persistent at the provided path0BnDisplay the thumbprint for a MLS signature keyAnSee core_crypto::MlsWirePolicyDgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6BbCopy the id into a new byte array.ClGet the raw bytes from this type, transferring data from \xe2\x80\xa6ChReturns own credential. If the group is inactive, it \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6AnReturns the proteus error codeCdConvert a proteus error into the relevant error codeAmOptional expiration timestamp0CfGet a reference to the extensions of this key package.jGit branch0Bn<code>GroupInfo</code> if the commit is merged0B`!!! Not literally idempotent !!!AnReturns the session identifierBiDNS entry associated with those challenge0CkDisplay decoded basic identities if group info is provided.CmWhether any set bits in a source flags value are also set \xe2\x80\xa6cDuhBlYield a set of contained named flags values.AoGet the length of the AEAD tag.BmX509 certificate not before as Unix timestampAkX509 certificate not beforeCnReturns the client\xe2\x80\x99s most recent public signature key as \xe2\x80\xa6CbPublic part of the signature key encoded as base64B`see core_crypto::Session::reseedAfInitializes the loggerCeThe intersection of a source flags value with the \xe2\x80\xa6nMLS thumbprint0B`The type of certificate to buildAaMLS ciphersuites.BeThe key used to encrypt the database.000BnWrapped 32-byte entropy seed with bounds check0CgInternal representation of proposal to ease further \xe2\x80\xa6ClSome clients are either still Basic or their certificate \xe2\x80\xa60AjAdds members to the group.BjAdds new members to the group/conversationCmExtract the content of an <code>MlsMessageIn</code> after \xe2\x80\xa6CjWhether this build was in Debug mode (true) or Release \xe2\x80\xa60CmX509 certificate identifying this client in the MLS group \xe2\x80\xa60BbReturns the group\xe2\x80\x99s ciphersuite.BaGet the <code>Ciphersuite</code>.CjGet (unverified) ciphersuite of the verifiable group info.CfThe <code>OpenMls</code> Ciphersuite used in the groupBoReturns the ciphersuite of a given conversationBaThe ciphersuite used in the groupBnCipher suite associated with the signature keyCgCore Crypto is a wrapper on top of OpenMLS aimed to \xe2\x80\xa6CdSend a commit in a conversation for changing the \xe2\x80\xa6gSee \xe2\x80\xa6BjProteus Public key hex-encoded fingerprintBjGet the length of the used hash algorithm.DbGet the <code>HpkeConfig</code> for this <code>Ciphersuite</code>.CnThis module contains all transactional behavior related to \xe2\x80\xa6A`Leave the group.CkURL to call with crate::E2eiEnrollment::new_account_requestAoURL for creating a new account.AlLeaf certificate private keyBfDisplay raw mls tls decoded structure.lNot yet usednRevocation URLAjUpdates the own leaf node.ClStarts a new transaction in Core Crypto. If the callback \xe2\x80\xa6AhReturns the wire format.CbDefines if handshake messages are encrypted or notClDefines if handshake messages are encrypted or not Note: \xe2\x80\xa6BnInformation returned when a commit is created.CmConsumers of this library can use this to specify data to \xe2\x80\xa6DiThe <code>Conversation</code> trait provides a set of operations that \xe2\x80\xa6CmIndicates the standalone status of a device Credential in \xe2\x80\xa60AlGroupInfo encrypted in a JWEAgThe key package struct.CkLimit on the length of a blob to be stored in the database.BeOpenmls produces these kinds of errorDhBefore use with the <code>MlsGroup</code> API, the message has to be \xe2\x80\xa6CmEntity representing a persisted <code>SignatureKeyPair</code>CmClient callbacks to allow communication with the delivery \xe2\x80\xa6CfUsed by core crypto to send commits or application \xe2\x80\xa6BdResult of an authorization creation.AlResult of an order creation.BjDecode and display a proteus prekey bundleClA Proteus operation failed, but we captured some context \xe2\x80\xa6BeProteus produces these kinds of errorCmRepresents the identity claims identifying a client Those \xe2\x80\xa60CmRepresents the parts of WireIdentity that are specific to \xe2\x80\xa60D`The bitwise or (<code>|</code>) of the bits in two flags values.BjAll supported ciphersuites in this sessionAhCommit delay in seconds.0CnThis module contains all super::TransactionContext methods \xe2\x80\xa6AmAcquire a conversation guard.CiMLS groups (aka conversation) are the actual entities \xe2\x80\xa6CgName as displayed in the messaging application e.g. \xe2\x80\xa60Amre-export rusty-jwt-tools APICgThis module contains all behaviour of a transaction \xe2\x80\xa6BcOutput of <code>git describe</code>0DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.CkClones all references that the MlsCryptoProvider comprises.DjGet the identity of the client\xe2\x80\x99s <code>Credential</code> owning this \xe2\x80\xa6CeReturns the <code>MlsGroupConfig</code> padding size.ClA unique identifier of the proposal to rollback it later \xe2\x80\xa6CkImplement a proteus function, or return an error if the \xe2\x80\xa6AnInitializes the proteus clientCaSee core_crypto::proteus::ProteusCentral::try_newCcGenerates a random byte array of the specified size0BfSee core_crypto::Session::random_bytesBgSee core_crypto::Session::random_bytes.BmSend a message to the corresponding endpoint.0AiFor creating a challenge.CmHolds URLs of all the standard ACME endpoint supported on \xe2\x80\xa6CkMetadata describing the conditions of the build of this \xe2\x80\xa60CkCoreCrypto wraps around MLS and Proteus implementations \xe2\x80\xa6DiAn <code>EpochObserver</code> is notified whenever a conversation\xe2\x80\x99s \xe2\x80\xa600DhA <code>HistorySecret</code> encodes sufficient client state that it \xe2\x80\xa60CeA reference to a key package. This value uniquely \xe2\x80\xa6nKeystore ErrorAlA key store operation failedCgEntity representing a persisted <code>Credential</code>CgEntity representing a persisted <code>KeyPackage</code>oMLS key packageAmWrapper over WireFormatPolicyCgThis happens when the DS cannot flag KeyPackages as \xe2\x80\xa60nProvider ErrorBdConfiguration parameters for SessionCmContains everything client needs to know after decrypting \xe2\x80\xa6Ansee core_crypto::WelcomeBundleDeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6AjReturns the configuration.CaCopy wasm files from sources into deployment pathBfReturns the <code>CryptoConfig</code>.CnThis function will be called every time a conversation\xe2\x80\x99s \xe2\x80\xa600CdExports a secret from the current epoch. Returns \xe2\x80\xa6BmReads the client_id from the leaf certificateCaGet the public HPKE init key of this key package.AjOpen or create a Database.CjReturns the leaf node of the client in the tree owning \xe2\x80\xa6AnX509 certificate serial number0DiReturns <code>true</code> if the internal state has changed and needs \xe2\x80\xa6AcBuild target triple0ClIn case \xe2\x80\x98credential_type\xe2\x80\x99 is MlsCredentialType::X509 \xe2\x80\xa6CnIn case \xe2\x80\x98credential_type\xe2\x80\x99 is CredentialType::X509 this \xe2\x80\xa6CkMetadata describing the conditions of the build of this \xe2\x80\xa6AjWhere to open a connection0CeA unique identifier for a group/conversation. The \xe2\x80\xa6BnA unique identifier for a single conversation.AbType of CredentialCiWire end to end identity solution for fetching a x509 \xe2\x80\xa60CnEntity representing an enrollment instance used to fetch a \xe2\x80\xa6AgOpenMLS GroupInfo errorCnA wrapper for the OpenMLS Ciphersuite, so that we are able \xe2\x80\xa6AdOpenMls crypto errorCjA wrapper struct for an error string. This can be used \xe2\x80\xa6DgSpecifies the configuration parameters for a <code>MlsGroup</code>. \xe2\x80\xa6CnAbstraction over a openmls::prelude::hash_ref::ProposalRef \xe2\x80\xa6CcProteus counterpart of crate::mls::session::SessionBdDecode and display a proteus messageAh32-byte raw entropy seed0CkThese errors wrap each of the module-specific errors in \xe2\x80\xa6D`Get the <code>AeadType</code> for this <code>Ciphersuite</code>.BaAuthorizations to create with \xe2\x80\xa6ClAuthorizations to create with <code>new_authz_request</code>BaReturns build data for CoreCryptoAoFeatures enabled for this build0BkCreates an application message. Returns \xe2\x80\xa6BgExports the clients from a conversationgSee \xe2\x80\xa60CjReads the \xe2\x80\x98Not Before\xe2\x80\x99 claim from the leaf certificateCoGet the <code>HashType</code> for this <code>Ciphersuite</code>AmInstantiate a history client.CkReturns the leaf index of the client in the tree owning \xe2\x80\xa6DdReturns a reference to the <code>StagedCommit</code> of the most \xe2\x80\xa6CmPropose the group to be reinitialized. When commited this \xe2\x80\xa6AoRemoves members from the group.BlRemoves clients from the group/conversation.BgReplaces the PKI env currently in place0AiDuration since UNIX EPOCHCkBeware: if you change the value of this constant on any \xe2\x80\xa6AaMLS ciphersuites.BeThe primary error type for CoreCryptoBmSupporting struct for CRL registration result0CmThis item requires a feature that the core-crypto library \xe2\x80\xa6BkA <code>GroupInfo</code> with some metadataDeThe <code>HistoryObserver</code> will be called when updating the \xe2\x80\xa60BhMessage rejected by the delivery serviceBaReturned when a commit is createdCnThis is a wrapper on top of the OpenMls\xe2\x80\x99s MlsGroup, that \xe2\x80\xa6CmGeneric error type that indicates unrecoverable errors in \xe2\x80\xa6AcParse message errormWelcome errorBfReturns the key size of the used AEAD.AmFFI bindings for core-crypto.DeFree function to construct a new <code>CoreCryptoFfi</code> instance.AlReturns the credential type.CaIndicates whether the credential is Basic or X5090ChDeserializes a TLS-serialized message, then processes itgSee \xe2\x80\xa6ClReturns true when end-to-end-identity is enabled for the \xe2\x80\xa6CaSee crate::mls::session::Session::e2ei_is_enabledBiSee core_crypto::Session::e2ei_is_enabled0CmEncrypts a raw payload then serializes it to the TLS wire \xe2\x80\xa64CiIndicates if the <code>payload</code> is encrypted or notAoHow the group info is encrypetdBnThis module contains the implementation of \xe2\x80\xa6CjThis module is concerned with setting the external sender.CjConvert a numeric error code into the relevant proteus \xe2\x80\xa6BkReturns whether this client is E2EI capableDfReturns the <code>MlsGroupConfig</code> leaf extensions configuration.ChReturns the <code>MlsGroupConfig</code> max past epochs.CgClones the references of the PkiEnvironment and the \xe2\x80\xa6ChWaits for the current transaction to be committed or \xe2\x80\xa6CjCreates a new transaction. All operations that persist \xe2\x80\xa6121CnParses incoming messages from the DS. Checks for syntactic \xe2\x80\xa6BcDecrypts a proteus message envelopegSee \xe2\x80\xa6BoEncrypts proteus message for a given session ID1AhProteus session accessor0ClSerializes both wrapped objects into TLS and return them \xe2\x80\xa6CdAllows to retrieve the underlying key store directly0CnUsed by consumers to initializes a MLS client. Encompasses \xe2\x80\xa6CnThis trait is used to provide a callback mechanism to hook \xe2\x80\xa6DbA result which produces a <code>CoreCryptoError</code> by default.CcA decrypted message and various associated metadataClResult of an authorization creation see RFC 8555 Section \xe2\x80\xa6CdResult of an order creation see RFC 8555 Section 7.4AoOIDC refresh token used in E2EIBoRepresents the byte array in MlsGroupInfoBundleCjThe MLS group is in an invalid state for an unknown reasonBjUnexpectedly failed to retrieve group infooNew group errorCbErrors that are thrown by TLS serialization crate.CcAn entity / data which has been packaged by the \xe2\x80\xa60BeProteus produces these kinds of errorBaOpenMLS LeafNode validation errorDkLike <code>Into</code>, but different, because we don\xe2\x80\x99t actually want \xe2\x80\xa6DjThis module exists merely because the <code>Entity</code> trait is not \xe2\x80\xa6DbReturns the <code>MlsGroupConfig</code> external senders extensionCdDelivery service public signature key and credential0BkFinal step before fetching the certificate.CaSee core_crypto::E2eiEnrollment::finalize_requestBbConvert from a bits value exactly.BgReturns whether we have a PKI env setup0CnMarks this conversation as child of another. Prerequisite: \xe2\x80\xa6ChReturns all members credentials with their signature \xe2\x80\xa6CaDeletes <code>MlsGroups</code> from the database.CkChecks if the given MLS group id exists in the keystore \xe2\x80\xa6AjCreates a new Add proposalAoCreate a new empty conversationDgCreates a new group from a <code>Welcome</code> message. Returns an \xe2\x80\xa6CjClientId of the sender of the message being decrypted. \xe2\x80\xa6Basee MlsConversationDecryptMessage11CnRepresents a x509 certificate chain supplied by the client \xe2\x80\xa6B`A Conversation Guard wraps a \xe2\x80\xa6AnReference to a ConversationId.EgA <code>CoreCryptoCommand</code> has an <code>execute</code> method which accepts a \xe2\x80\xa6EbThe <code>CoreCryptoContext</code> holds the primary <code>CoreCrypto</code> APIs.ChAn interface for the specialized queries in the KeyStoreCcFor creating a challenge see RFC 8555 Section 7.5.1AjSee RFC 8555 Section 7.1.1ChInterface to fetch from the database either from the \xe2\x80\xa6BfEntity representing a buffered commit.CkLists all the supported Credential types. Could list in \xe2\x80\xa6DkEntity representing a persisted <code>HpkePrivateKey</code> (related to \xe2\x80\xa6BfEntity representing a buffered messageCmReturned when a Proposal is created. Helps roll backing a \xe2\x80\xa6CeEntity representing a persisted <code>MlsGroup</code>CgProteus session IDs, it seems it\xe2\x80\x99s basically a stringCgHelper for working with the new transasction interface.BlReturns the length of the nonce of the AEAD.CmOnly set when the decrypted message is a commit. Contains \xe2\x80\xa6C`Only set when the decrypted message is a commit.Cnx509 certificate chain First entry is the leaf certificate \xe2\x80\xa6BbReturns the client\xe2\x80\x99s public key.gSee \xe2\x80\xa60CjGenerates a new client Dpop JWT token. It demonstrates \xe2\x80\xa61BoRegisters a CRL for the use in E2EI processing.2CmAn encrypted message to fan out to all other conversation \xe2\x80\xa60BjExport a group info object for this group.CkDerives a new key from the one in the group, to be used \xe2\x80\xa655AlParses the response from \xe2\x80\xa6CbSee core_crypto::E2eiEnrollment::finalize_responseCfParse the source, returning all function bodies by \xe2\x80\xa6ClReturns the public key fingerprint of the local identity \xe2\x80\xa6CbIs the epoch changed after decrypting this messageBasee MlsConversationDecryptMessageChtrue when the decrypted message resulted in an epoch \xe2\x80\xa60C`Get the return value from the internal function.CiDuration in seconds after which we will automatically \xe2\x80\xa6CfDuration after which we will automatically force a \xe2\x80\xa6B`Persists a <code>MlsGroup</code>BdCreates a new authorization request.gSee \xe2\x80\xa6CmCreates a new acme order for the handle (userId + display \xe2\x80\xa61CnCreates a new group with a given group ID with the creator \xe2\x80\xa6ChReturns an <code>Iterator</code> over pending proposals.CjProvide the implementation of functions to communicate \xe2\x80\xa6BkSee core_crypto::Session::provide_transportCcPrune the provided KeyPackageRefs from the keystoreDeIndicates if the <code>payload</code> contains a full, partial or \xe2\x80\xa6BaWhat kind of ratchet tree is usedAgSets the configuration.BmSet maximum log level forwarded to the loggerCaDo whatever it takes not to clone the RatchetTreeBcUpdates the extensions of the groupCkSee core_crypto::mls::conversation::ConversationGuard::wipeBfDefines the log level for a CoreCryptoAaAdd members errorBhAn error that occurs in methods of a \xe2\x80\xa6A`EmptyInput errorAiA GroupInfo with metadataoRatchetTreeTypeAaSelf update errorCkError when decoding CBOR and/or decrypting Proteus messagesCkError when encoding CBOR and/or decrypting Proteus messagesCkThis struct provides transactional support for Core Crypto.CjThe ciphersuite identifier presented does not map to a \xe2\x80\xa6gSee \xe2\x80\xa6CgSee core_crypto::mls::conversation::Conversation::epoch0CmPrunes local KeyPackages after making sure they also have \xe2\x80\xa6AlParses the response from \xe2\x80\xa63CnParses the ACME server response from the endpoint fetching \xe2\x80\xa64CmReturns the public key fingerprint of the remote identity \xe2\x80\xa6CfConvert from a bits value, unsetting any unknown bits.DcGet the <code>HpkeKdfType</code> for this <code>Ciphersuite</code>.DcGet the <code>HpkeKemType</code> for this <code>Ciphersuite</code>.CmCreate an in-memory Database whose data will be lost when \xe2\x80\xa6DjLoads <code>MlsGroups</code> from the database. It will be returned as \xe2\x80\xa67:7:BnCreates proposals to add members to the group.C`see openmls::group::MlsGroup::propose_add_memberChPropose to update the group context extensions. This \xe2\x80\xa6C`Creates a new Proteus prekey and returns the \xe2\x80\xa6CnCreates a new Proteus prekey with the given id and returns \xe2\x80\xa6CcSend a commit bundle to the corresponding endpoint.0DgReturns the <code>MlsGroupConfig</code> group extensions configuration.CkReturns the <code>MlsGroupConfig</code> wire format policy.CmError type to represent various errors that can happen in \xe2\x80\xa6Bgsee core_crypto::MlsCustomConfigurationCgError to represent when a key is not present in the \xe2\x80\xa6AjOpenMLS merge commit errorCmEntity representing a persisted <code>SignatureKeyPair</code>CjError when there\xe2\x80\x99s a critical error within a proteus \xe2\x80\xa6CnA type that represents a group info of which the signature \xe2\x80\xa6CcCreates a request for finally fetching the x509 \xe2\x80\xa6CdSee core_crypto::E2eiEnrollment::certificate_requestChVerifies that the previous challenge has been completed.gSee \xe2\x80\xa6BkGet an instance of the default ciphersuite.CeConstruct a recursive error given the current contextC`Checks if a given conversation id exists locally0BmSee core_crypto::Session::conversation_exists04ClCreates an enrollment instance with private key material \xe2\x80\xa65CeReturns the epoch authenticator of the current epoch.AiExports the Ratchet Tree.ClReturns the raw public key of the single external sender \xe2\x80\xa688ClFrom a given conversation, get the identity of the users \xe2\x80\xa699DdGet the <code>HpkeAeadType</code> for this <code>Ciphersuite</code>.ClMerge a StagedCommit into the group after inspection. As \xe2\x80\xa6AlWire CoreCrypto MLS ProviderCjFor creating a new acme account. This returns a signed \xe2\x80\xa6=AjCreates a new Add proposal0CepathLenConstraint       INTEGER (0..MAX) OPTIONAL \xe2\x80\xa6BjFetches and delete the enrollment instanceBoCreates a proposal to update the own leaf node.Casee openmls::group::MlsGroup::propose_self_updateCgReturns the proteus identity\xe2\x80\x99s public key fingerprint0CeSee core_crypto::proteus::ProteusCentral::fingerprintgSee \xe2\x80\xa6BcCreates a new session from a prekeyDgGet the <code>SignatureScheme</code> for this <code>Ciphersuite</code>.CjVerify that this key package is valid disregarding the \xe2\x80\xa6CaThis module contains the primitives to enable \xe2\x80\xa6BkUpdates the key of the CoreCrypto database.CjSelf updates the KeyPackage and automatically commits. \xe2\x80\xa6DjDuration relative to <code>validity_start</code> if present. Otherwise \xe2\x80\xa6CiThis error is emitted when the requested conversation \xe2\x80\xa6BoA specialized Result for the KeyStore functionsAfInvalid history secretDkEntity representing a persisted <code>HpkePrivateKey</code> (related to \xe2\x80\xa6AkOpenMls Export Secret errorBbResponse from the delivery serviceChMLS transport may or may not succeeed; this response \xe2\x80\xa6AoVarious internal Proteus errorsAlParses the response from \xe2\x80\xa6gSee \xe2\x80\xa6CbConstruct a ciphersuite enum instance from its \xe2\x80\xa6EfSets the <code>group_state</code> to <code>MlsGroupState::Operational</code>, thus \xe2\x80\xa6AiWire Core-Crypto KeystoreCdshould the key agreement flag of KeyUsage be enabledChLike Self::self_update but accepts an explicit node. \xe2\x80\xa6CiGet an immutable view of an <code>MlsConversation</code>.DeMerges the pending <code>StagedCommit</code> if there is one, and \xe2\x80\xa687CgCreates proposals to add an external PSK to the key \xe2\x80\xa6ChDecrypt a message whether or not the proteus session \xe2\x80\xa6BgSaves a proteus session in the keystore:DkRequests <code>count</code> keying material to be present and returns a \xe2\x80\xa6AoPersists an enrollment instanceCfSaves a new X509 credential. Requires first having \xe2\x80\xa6=DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6CnIndicates the state of a Conversation regarding end-to-end \xe2\x80\xa60CnWhen looking for a X509 credential for a given ciphersuite \xe2\x80\xa6CnAn ImmutableConversation wraps a <code>MlsConversation</code>.CkProduce the error message from the innermost wrapped error.AaGroup state errorAdRemove members errorAiPropose add members errorCgThe proteus client has been called but has not been \xe2\x80\xa6CmAllows persisting an active enrollment (for example while \xe2\x80\xa6gSee \xe2\x80\xa6CkReturns whether the E2EI PKI environment is setup (i.e. \xe2\x80\xa6ChSee crate::mls::session::Session::e2ei_is_pki_env_setup.BoSee core_crypto::Session::e2ei_is_pki_env_setup0ChRegisters a Root Trust Anchor CA for the use in E2EI \xe2\x80\xa64DjGets the e2ei conversation state from a <code>GroupInfo</code>. Useful \xe2\x80\xa6ChSee crate::mls::session::Session::get_credential_in_use.CnFrom a given conversation, get the identity of the members \xe2\x80\xa677CiReturns the Proteus last resort prekey ID (u16::MAX = \xe2\x80\xa6ChGet actual group members and subtract pending remove \xe2\x80\xa6AcFetches KeypackagesCkThis function will be called before a history secret is \xe2\x80\xa6BjPrepare a history secret before being sentCkCreates proposals to remove members from the group. The \xe2\x80\xa6Ccsee openmls::group::MlsGroup::propose_remove_memberCgReturns the resumption PSK secret of the current epoch.CgSafely get the return value from the internal function.DdReturns a <code>CredentialWithKey</code> from the unverified payloadCiThe configuration parameters for a group/conversation \xe2\x80\xa6AmOpenMLS encrypt message errorAeExternal Commit errorAdCreate message errorAiPropose self update errorBoValidated configuration parameters for Session.CjAllows to remove a pending (uncommitted) proposal. Use \xe2\x80\xa6CmEnable history sharing by generating a history client and \xe2\x80\xa6gSee \xe2\x80\xa6CnThis function will be called when a new history client has \xe2\x80\xa60CjWindow for which decryption secrets are kept within an \xe2\x80\xa6BkDeletes a proteus session from the keystore3AfProteus session exists0ChSee core_crypto::proteus::ProteusCentral::session_exists5CjStores a standalone proposal in the internal ProposalStore6BkAny error that occurs during mls transport.AoExport public group state errorBiMls Transport Callbacks were not providedCeEncapsulates a prekey id and a cbor-serialized prekeyCgCheck whether the this key package supports all the \xe2\x80\xa6AlClear the pending proposals.ClDisable history sharing by removing history clients from \xe2\x80\xa6=CnIndicates when to mark a conversation as not verified i.e. \xe2\x80\xa6>BhVerifies a Group state before joining itCjSee crate::mls::session::Session::e2ei_verify_group_state.Cgshould the key encipherment flag of KeyUsage be enabledCaGenerate a new <code>crate::HistorySecret</code>.CeReturns a resumption psk for a given epoch. If no \xe2\x80\xa6CkProduce the error message from the innermost wrapped error.CjJoin an existing group through an External Commit. The \xe2\x80\xa6CgIssues an external commit and stores the group in a \xe2\x80\xa6gSee \xe2\x80\xa6DjLoads a temporary <code>MlsGroup</code> and its configuration from the \xe2\x80\xa6DiSaves a <code>MlsGroup</code> in a temporary table (typically used in \xe2\x80\xa6CiCreate a conversation from a received MLS Welcome message3ClEncrypts a proteus message for several sessions ID. This \xe2\x80\xa64CfCreates a new Proteus prekey with an automatically \xe2\x80\xa60BgReloads the sessions from the key store6CkAdd an epoch observer to this session. (see EpochObserver).BeAdd an epoch observer to this client.BkRemoves a specific proposal from the store.CfReturns the count of valid, non-expired, unclaimed \xe2\x80\xa6Ajto avoid recursive structsCmWe always instantiate history clients with this prefix in \xe2\x80\xa6AoOpenMLS delete KeyPackage errorAoOpenMLS update extensions errorCdNew Certificate Revocation List distribution points.DaEntity representing a temporarily persisted <code>MlsGroup</code>AlPropose remove members errorBjCommits all pending proposals of the groupgSee \xe2\x80\xa6CdCalculates the confirmation tag of the current group11BkHex-encoded fingerprint of the given prekeyBjGet the group\xe2\x80\x99s <code>Extensions</code>.CjHow many application messages can be skipped. Use this \xe2\x80\xa6ClParses external senders\xe2\x80\x99 keys provided by the delivery \xe2\x80\xa6CiThis error is emitted when the requested conversation \xe2\x80\xa6CmThe byte vector included in this error variant is the raw \xe2\x80\xa6CeThe configuration parameters for a group/conversationCkInvalid crate::transaction_context::TransactionContext. \xe2\x80\xa6CbEntity representing a list of MlsEncryptionKeyPairChHelps consumer by providing a deterministic delay in \xe2\x80\xa6BlDefault capabilities for every generated \xe2\x80\xa6CkDeletes all key packages whose leaf node\xe2\x80\x99s credential \xe2\x80\xa6=ClFetches the persisted enrollment and deletes it from the \xe2\x80\xa6>CkDeletes a temporary <code>MlsGroup</code> from the databaseChCrafts a new external Add proposal. Enables a client \xe2\x80\xa6DbReturns the <code>MlsGroupConfig</code> number of resumption psks.CgReturns the proteus identity\xe2\x80\x99s public key fingerprint0CkSee core_crypto::proteus::ProteusCentral::fingerprint_localgSee \xe2\x80\xa6CaAdd an history observer to this session. (see \xe2\x80\xa6BfAdd a history observer to this client.AgGroupInfoEncryptionTypeBaOpenMLS LeafNode validation errorAjOpenMLS Commit merge errorCmProteus Session wrapper, that contains the identifier and \xe2\x80\xa6CnLike Self::commit_to_pending_proposals but with additional \xe2\x80\xa6AmInstantiate a history client.CkGenerates an E2EI enrollment instance for a E2EI client \xe2\x80\xa69ClCheck if history sharing is enabled, i.e., if any of the \xe2\x80\xa6:B`Creates a new challenge request.;0;==;;AnReturns the last resort prekey<DgReturns the <code>MlsGroupConfig</code> boolean flag that indicates \xe2\x80\xa6Bg<code>KeyPackageBundle</code> new error>CnCreates a Commit message that covers the pending proposals \xe2\x80\xa6CdNew CRL distribution points that appeared by the \xe2\x80\xa6Basee MlsConversationDecryptMessage11BmNew CRL Distribution of members of this group22CnGenerate a new CredentialBundle (Credential + KeyPair) for \xe2\x80\xa6AlParses the response from \xe2\x80\xa6gSee \xe2\x80\xa610CkCreate a conversation from a TLS serialized MLS Welcome \xe2\x80\xa6CgCreates proposals to add an external PSK to the key \xe2\x80\xa6BgCreates a proteus session from a prekey3CeThe configuration parameters for a group/conversationBcOpenMLS keypackage validation errorBoCreates a proposal to update the own leaf node.Casee openmls::group::MlsGroup::propose_self_update1CiCreates a proteus session from a Proteus message envelope8DeReturns the <code>MlsGroupConfig</code> sender ratchet configuration.CnDefault number of KeyPackages a client generates the first \xe2\x80\xa6CkRepresents the potential items a consumer might require \xe2\x80\xa6CkThis type represents all possible errors that can occur \xe2\x80\xa6<<:CiReturns the proteus last resort prekey id (u16::MAX = \xe2\x80\xa60==CjThis is thrown when a client wants to retry sending an \xe2\x80\xa6>ire-exportCmGenerates an E2EI enrollment instance for a \xe2\x80\x9cregular\xe2\x80\x9d \xe2\x80\xa6gSee \xe2\x80\xa6Cgshould the subject key identifier extension be includedCgCreates proposals to add an external PSK to the key \xe2\x80\xa6CfReturns the count of valid, non-expired, unclaimed \xe2\x80\xa6BaCommit to pending proposals errorD`Generates an <code>MlsGroupConfig</code> from this configurationCaReturns <code>amount_requested</code> OpenMLS \xe2\x80\xa6666CdRegisters an Intermediate CA for the use in E2EI \xe2\x80\xa6CjUpdates the key of the CoreCrypto database. To be used \xe2\x80\xa6CkCreates proposals to remove members from the group. The \xe2\x80\xa6CdType safe recursion of MlsConversationDecryptMessageCaDH KEM P256 | AES-GCM 128 | SHA2-256 | EcDSA P2560CaDH KEM P384 | AES-GCM 256 | SHA2-384 | EcDSA P3840CaDH KEM P521 | AES-GCM 256 | SHA2-512 | EcDSA P5210BlDH KEM x448 | AES-GCM 256 | SHA2-512 | Ed4480C`DH KEM x25519 | AES-GCM 128 | SHA2-256 | Ed2551906BaGenerates a single new keypackageCaDH KEM x448 | Chacha20Poly1305 | SHA2-512 | Ed4480CeDH KEM x25519 | Chacha20Poly1305 | SHA2-256 | Ed255190")